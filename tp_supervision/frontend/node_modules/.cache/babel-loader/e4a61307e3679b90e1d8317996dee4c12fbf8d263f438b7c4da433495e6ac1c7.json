{"ast":null,"code":"const CryptoJS = require('crypto-js');\nfunction encryptTextWithKey(text, ke) {\n  const key = CryptoJS.enc.Utf8.parse(ke);\n  const encrypted = CryptoJS.AES.encrypt(text, key, {\n    iv: key,\n    mode: CryptoJS.mode.ECB\n  });\n  const ciphertext = encrypted.ciphertext.toString(CryptoJS.enc.Base64).toString();\n  return ciphertext;\n}\nexport default encryptTextWithKey;","map":{"version":3,"names":["CryptoJS","require","encryptTextWithKey","text","ke","key","enc","Utf8","parse","encrypted","AES","encrypt","iv","mode","ECB","ciphertext","toString","Base64"],"sources":["/home/bonice/Bureau/projet/projettp/test/TP_surveillance_reseau/tp_supervision/frontend/src/utils/encryption.js"],"sourcesContent":["const CryptoJS = require('crypto-js');\n\nfunction encryptTextWithKey(text, ke) {\n    const key = CryptoJS.enc.Utf8.parse(ke)\n    const encrypted = CryptoJS.AES.encrypt(text, key, {\n        iv: key,\n        mode: CryptoJS.mode.ECB\n      });\n      const ciphertext = encrypted.ciphertext.toString(CryptoJS.enc.Base64).toString();\n      return ciphertext;\n\n}\n\nexport default encryptTextWithKey;\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,WAAW,CAAC;AAErC,SAASC,kBAAkBA,CAACC,IAAI,EAAEC,EAAE,EAAE;EAClC,MAAMC,GAAG,GAAGL,QAAQ,CAACM,GAAG,CAACC,IAAI,CAACC,KAAK,CAACJ,EAAE,CAAC;EACvC,MAAMK,SAAS,GAAGT,QAAQ,CAACU,GAAG,CAACC,OAAO,CAACR,IAAI,EAAEE,GAAG,EAAE;IAC9CO,EAAE,EAAEP,GAAG;IACPQ,IAAI,EAAEb,QAAQ,CAACa,IAAI,CAACC;EACtB,CAAC,CAAC;EACF,MAAMC,UAAU,GAAGN,SAAS,CAACM,UAAU,CAACC,QAAQ,CAAChB,QAAQ,CAACM,GAAG,CAACW,MAAM,CAAC,CAACD,QAAQ,CAAC,CAAC;EAChF,OAAOD,UAAU;AAEvB;AAEA,eAAeb,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}